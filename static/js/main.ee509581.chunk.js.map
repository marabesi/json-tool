{"version":3,"sources":["components/ui/JsonEditor.tsx","core/cleanUp.ts","core/formatter.ts","components/ui/io/InputText.tsx","components/ui/io/Button.tsx","components/ui/menu/ResultMenu.tsx","components/ui/menu/JsonMenu.tsx","components/ui/EditorContainer.tsx","components/ui/Header.tsx","components/ui/Footer.tsx","components/ui/layout/Default.tsx","pages/Editors.tsx","pages/Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["JsonEditor","input","onChange","className","rest","handleChange","value","SettingsContext","Consumer","settings","basicSetup","options","forEach","item","title","active","style","backgroundColor","fullConfig","theme","gray","overflowY","fontFamily","properties","key","defaultValue","join","height","extensions","json","CleanUp","IS_INSIDE_JSON_VALUE","ENDED_JSON_PAIR_KEY_VALUE","STARTED_INSIDE_JSON_KEY","DOUBLE_QUOTES","originalJson","this","cleanUpJsonFrom","withoutSpaces","cleanWhiteSpaces","cleanNewLines","stringToClean","cleanString","stack","i","length","current","push","fmt2json","require","Formatter","rawJson","spacing","expand","escape","indent","formatted","result","inputText","classes","trim","type","eventValue","target","Button","children","ResultMenu","updateSpacing","writeToClipboard","cleanNewLinesAndSpaces","onClick","JsonMenu","pasteFromClipboard","cleanup","onLoadedFile","useFileUpload","selectFile","accept","multiple","file","reader","FileReader","readAsText","onload","evt","EditorContainer","width","Header","props","to","href","rel","Footer","DefaultLayout","cleanUp","Editors","onPersist","currentJson","useState","setOriginalResult","setResult","error","setError","setSpacing","onJsonChange","useCallback","JSON","parse","e","format","parseSpacing","parseInt","isNaN","useEffect","navigator","clipboard","read","clipboardItems","clipboardItem","types","getType","blob","text","writeText","contenteditable","newSpacing","withoutNewLines","withoutSpacesAndNewLines","cleanWhiteSpacesAndNewLines","Settings","prop","setProp","ops","setOps","map","option","index","checked","op","onSaveOs","event","editorOptions","createContext","App","savedState","setSavedState","path","element","Provider","changed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee509581.chunk.js","sourcesContent":["import CodeMirror, { BasicSetupOptions } from '@uiw/react-codemirror';\nimport fullConfig from '../../tailwindResolver';\nimport { json } from '@codemirror/lang-json';\nimport { SettingsContext } from '../../App';\nimport { CSSProperties } from 'react';\nimport { Option, Properties } from './Editor';\n\ntype Event = {\n  value: string;\n};\n\ntype EventChange = (event: Event) => void;\n\ninterface Props{\n  input: string;\n  className?: string;\n  onChange?: EventChange;\n  'data-testid': string;\n  contenteditable: boolean;\n}\n\nexport default function JsonEditor({ input, onChange, className, ...rest }: Props) {\n  const handleChange = (value: string) => {\n    if (onChange) {\n      onChange({ value });\n      return;\n    }\n  };\n\n  return (\n    <SettingsContext.Consumer>\n      {\n        settings => {\n          const basicSetup: BasicSetupOptions = {};\n          settings.options.forEach((item : Option) => basicSetup[item.title as keyof BasicSetupOptions] = item.active);\n\n          const style: CSSProperties = {\n            backgroundColor: fullConfig.theme.backgroundColor.gray['200'],\n            overflowY: 'hidden',\n            fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\n          };\n\n          // @ts-ignore\n          settings.properties.forEach((item : Properties) => style[item.key] = item.value);\n\n          return (\n            <>\n              <textarea data-testid={`raw-${rest['data-testid']}`} className=\"hidden\" defaultValue={input}></textarea>\n              <CodeMirror\n                value={input}\n                onChange={handleChange}\n                className={[className, 'h-full'].join(' ')}\n                style={style}\n                height=\"100%\"\n                extensions={[json()]}\n                basicSetup={basicSetup}\n                {...rest}\n              />\n            </>\n          );\n        }\n      }\n    </SettingsContext.Consumer>\n  );\n}\n","export default class CleanUp {\n\n  private IS_INSIDE_JSON_VALUE: number = 3;\n  private ENDED_JSON_PAIR_KEY_VALUE: number = 4;\n  private STARTED_INSIDE_JSON_KEY: number = 1;\n  private DOUBLE_QUOTES: string = '\"';\n\n  cleanWhiteSpaces(originalJson: string): string {\n    return this.cleanUpJsonFrom(' ', originalJson);\n  }\n\n  cleanNewLines(originalJson: string): string {\n    return this.cleanUpJsonFrom('\\n', originalJson);\n  }\n\n  cleanWhiteSpacesAndNewLines(originalJson: string): string {\n    const withoutSpaces = this.cleanWhiteSpaces(originalJson);\n    return this.cleanNewLines(withoutSpaces);\n  }\n\n  private cleanUpJsonFrom(stringToClean: string, originalJson: string) {\n    let cleanString = '';\n    let stack = [];\n\n    for (let i = 0; i < originalJson.length; i++) {\n      const current = originalJson[i];\n\n      if (current === this.DOUBLE_QUOTES) {\n        stack.push(current);\n      }\n\n      if (stack.length === this.STARTED_INSIDE_JSON_KEY || stack.length === this.IS_INSIDE_JSON_VALUE) {\n        cleanString += originalJson[i];\n      } else {\n        if (current !== stringToClean) {\n          cleanString += originalJson[i];\n        }\n      }\n\n      if (stack.length === this.ENDED_JSON_PAIR_KEY_VALUE) {\n        stack = [];\n      }\n    }\n\n    return cleanString;\n  }\n}","const fmt2json = require('format-to-json');\n\nexport default class Formatter {\n  constructor(private rawJson: string, private spacing: number = 2) { }\n\n  async format(): Promise<string> {\n    const formatted = await fmt2json(this.rawJson, {\n      expand: true,\n      escape: false,\n      indent: this.spacing\n    });\n    return formatted.result;\n  }\n}\n","type InputTextProps = {\n  onChange?: (value: string) => void;\n  value?: string\n  className?: string\n}\n\nexport default function inputText({ value, onChange, className, ...rest }: InputTextProps) {\n  const classes = [className, 'text-black p-1', ''].join(' ').trim();\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      className={classes}\n      onChange={eventValue => onChange ? onChange(eventValue.target.value) : null}\n      {...rest}\n    />\n  );\n}\n","import { DetailedHTMLProps, ReactNode } from 'react';\n\ntype ButtonProps = {\n  onClick?: DetailedHTMLProps<any, any>\n  children?: ReactNode\n  className?: string\n}\n\nexport default function Button({ children, className, ...rest }: ButtonProps) {\n  return(\n    <button\n      className={['bg-transparent border-0 text-white cursor-pointer p-2 outline-none hover:bg-gray-800', className].join(' ')}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n}\n","import InputText from '../io/InputText';\nimport Button from '../io/Button';\nimport { FaBackspace, FaRegCopy, FaTerminal, FaUserFriends } from 'react-icons/fa';\nimport { DetailedHTMLProps } from 'react';\n\ninterface Props {\n  spacing: DetailedHTMLProps<any, any>;\n  updateSpacing: DetailedHTMLProps<any, any>;\n  writeToClipboard: DetailedHTMLProps<any, any>;\n  cleanWhiteSpaces: DetailedHTMLProps<any, any>;\n  cleanNewLines: DetailedHTMLProps<any, any>;\n  cleanNewLinesAndSpaces: DetailedHTMLProps<any, any>;\n}\n\nexport default function ResultMenu(\n  { spacing, updateSpacing, writeToClipboard, cleanWhiteSpaces, cleanNewLines, cleanNewLinesAndSpaces }: Props\n) {\n  return (\n    <div className=\"flex justify-start items-center m-2 ml-0 text-white\">\n      <div className=\"flex items-center\">\n        <span className=\"mr-2\">Space tabulation</span>\n        <InputText\n          data-testid=\"space-size\"\n          className=\"w-10 rounded mr-2\"\n          value={spacing}\n          onChange={eventValue => updateSpacing(eventValue)}\n        />\n      </div>\n      <Button\n        onClick={cleanWhiteSpaces}\n        data-testid=\"clean-spaces\"\n        className=\"flex items-center\"\n      >\n        <FaBackspace className=\"mr-2\" />\n                Clean spaces\n      </Button>\n      <Button\n        onClick={cleanNewLines}\n        data-testid=\"clean-new-lines\"\n        className=\"flex items-center\"\n      >\n        <FaTerminal className=\"mr-2\" />\n                Clean new lines\n      </Button>\n      <Button\n        onClick={cleanNewLinesAndSpaces}\n        data-testid=\"clean-new-lines-and-spaces\"\n        className=\"flex items-center\"\n      >\n        <FaUserFriends className=\"mr-2\" />\n                Clean new lines and spaces\n      </Button>\n\n      <Button\n        data-testid=\"copy-json\"\n        onClick={writeToClipboard}\n        className=\"flex items-center\"\n      >\n        <FaRegCopy className=\"mr-2\" />\n                Copy json\n      </Button>\n    </div>\n  );\n}\n","import { DetailedHTMLProps } from 'react';\nimport Button from '../io/Button';\nimport { useFileUpload } from 'use-file-upload';\nimport { FaRegClipboard, FaRegFileArchive, FaRegTrashAlt } from 'react-icons/fa';\n\ninterface Props {\n  pasteFromClipboard: DetailedHTMLProps<any, any>;\n  cleanup: DetailedHTMLProps<any, any>;\n  onLoadedFile: DetailedHTMLProps<any, any>;\n}\n\nexport default function JsonMenu({ pasteFromClipboard, cleanup, onLoadedFile } : Props) {\n  const [, selectFile] = useFileUpload();\n\n  return (\n    <div className=\"flex w-full justify-start items-center m-2 ml-0\">\n      <Button\n        onClick={pasteFromClipboard}\n        data-testid=\"paste-from-clipboard\"\n        className=\"ml-0 flex items-center\"\n      >\n        <FaRegClipboard className=\"mr-2\" />\n        Paste from clipboard\n      </Button>\n      <Button\n        className=\"ml-0 flex items-center\"\n        onClick={() => {\n          selectFile({ accept: ['application/json', 'text/plain'], multiple: false }, ({ file }: any) => {\n            const reader = new FileReader();\n            reader.readAsText(file, 'UTF-8');\n            reader.onload = (evt) => {\n              if (evt.target) {\n                onLoadedFile(evt.target.result);\n              }\n            };\n          });\n        }}\n      >\n        <FaRegFileArchive className=\"mr-2\" />\n        Click to Upload\n      </Button>\n      <Button\n        onClick={cleanup}\n        data-testid=\"clean\"\n        className=\"flex items-center\"\n      >\n        <FaRegTrashAlt className=\"mr-2\" />\n        Delete all\n      </Button>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode\n}\n\nexport default function EditorContainer({ children }: Props) {\n  return (\n    <div className=\"flex flex-col h-full m-1\" style={{ width: '49vw' }}>\n      {children}\n    </div>\n  );\n}\n","import { FaCoffee, FaRegSun } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nexport default function Header({ ...props }) {\n  return (\n    <div className=\"bg-blue-900 flex justify-between p-5 text-white\" {...props}>\n      <div className=\"flex\">\n        <h2 className=\"text-yellow-400 font-bold\">\n          <Link to=\"/\" data-testid=\"to-home\">JSON tool</Link>\n        </h2> |\n        <a href=\"https://github.com/marabesi/json-tool\" target=\"_blank\" rel=\"noreferrer\">by marabesi</a>\n      </div>\n      <div className=\"flex\">\n        <Link className=\"flex items-center mr-5\" data-testid=\"settings\" to=\"/settings\">\n          <FaRegSun />\n        </Link>\n        <a className=\"flex items-center\" data-testid=\"buy-me-a-coffee\" href=\"https://www.buymeacoffee.com/marabesi\" target=\"_blank\" rel=\"noreferrer\">\n          <FaCoffee className=\"mr-2\"/>\n          <span>Buy me a coffee</span>\n        </a>\n      </div>\n    </div>\n  );\n}\n","export default function Footer({ ...props }) {\n  return (\n    <div className=\"flex bg-gray-300 text-white p-5\" { ...props }>\n      <a href=\"https://github.com/marabesi/json-tool/blob/main/LICENSE.md\" target=\"_blank\" rel=\"noreferrer\">\n        CC0 1.0 Universal\n      </a>\n    </div>\n  );\n}\n","import Header from '../Header';\nimport Footer from '../Footer';\nimport { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode\n}\n\nexport default function DefaultLayout({ children }: Props) {\n  return (\n    <div className=\"bg-gray-500 flex flex-col h-screen\">\n      <Header />\n      { children }\n      <Footer />\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport JsonEditor from '../components/ui/JsonEditor';\nimport CleanUp from '../core/cleanUp';\nimport Formatter from '../core/formatter';\nimport ResultMenu from '../components/ui/menu/ResultMenu';\nimport JsonMenu from '../components/ui/menu/JsonMenu';\nimport EditorContainer from '../components/ui/EditorContainer';\nimport DefaultLayout from '../components/ui/layout/Default';\n\nconst cleanUp = new CleanUp();\n\ninterface Props {\n  currentJson: string\n  onPersist: (json: string) => void\n}\n\nexport default function Editors({ onPersist, currentJson }: Props) {\n  const [originalJson, setOriginalResult] = useState<string>(currentJson);\n  const [result, setResult] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [spacing, setSpacing] = useState<string>('2');\n\n  const onJsonChange = useCallback(async (value: string) => {\n    setError('');\n\n    if (!spacing) return;\n\n    try {\n      if (value) {\n        JSON.parse(value);\n      }\n    } catch (e: any) {\n      setError('invalid json');\n    }\n\n    let format = new Formatter(value, 2);\n\n    const parseSpacing = parseInt(spacing);\n    if (!isNaN(parseSpacing)) {\n      format = new Formatter(value, parseSpacing);\n    }\n\n    const result = await format.format();\n\n    setOriginalResult(value);\n    setResult(result);\n  }, [spacing]);\n\n  useEffect(() => {\n    onJsonChange(originalJson);\n    return () => {\n      onPersist(originalJson);\n    };\n  }, [spacing, originalJson, onJsonChange, onPersist]);\n\n  const pasteFromClipboard = async () => {\n    const clipboardItems = await navigator.clipboard.read();\n    for (const clipboardItem of clipboardItems) {\n      for (const type of clipboardItem.types) {\n        const blob = await clipboardItem.getType(type);\n        const text = await blob.text();\n        await onJsonChange(text);\n      }\n    }\n  };\n\n  const cleanup = async () => {\n    await onJsonChange('');\n  };\n\n  const writeToClipboard = async () => {\n    await navigator.clipboard.writeText(result);\n  };\n\n  const cleanWhiteSpaces = () => {\n    const withoutSpaces = cleanUp.cleanWhiteSpaces(originalJson);\n    setResult(withoutSpaces);\n  };\n\n  const cleanNewLines = () => {\n    const withoutNewLines = cleanUp.cleanNewLines(originalJson);\n    setResult(withoutNewLines);\n  };\n\n  const cleanNewLinesAndSpaces = () => {\n    const withoutSpacesAndNewLines = cleanUp.cleanWhiteSpacesAndNewLines(originalJson);\n    setResult(withoutSpacesAndNewLines);\n  };\n\n  const updateSpacing = (newSpacing: string) => setSpacing(newSpacing);\n\n  return (\n    <DefaultLayout>\n      <div className=\"p-1 mb-8 h-full\" style={{ height: '80vh' }}>\n        <div className=\"flex h-full justify-center\">\n          <EditorContainer>\n            <JsonMenu\n              pasteFromClipboard={pasteFromClipboard}\n              cleanup={cleanup}\n              onLoadedFile={onJsonChange}\n            />\n\n            <JsonEditor\n              input={originalJson}\n              onChange={eventValue => onJsonChange(eventValue.value)}\n              data-testid=\"json\"\n              contenteditable={true}\n            />\n          </EditorContainer>\n          <EditorContainer>\n            <ResultMenu\n              spacing={spacing}\n              updateSpacing={updateSpacing}\n              writeToClipboard={writeToClipboard}\n              cleanWhiteSpaces={cleanWhiteSpaces}\n              cleanNewLines={cleanNewLines}\n              cleanNewLinesAndSpaces={cleanNewLinesAndSpaces}\n            />\n\n            <JsonEditor\n              input={result}\n              className=\"result\"\n              data-testid=\"result\"\n              contenteditable={true}\n            />\n          </EditorContainer>\n        </div>\n        <div className=\"bg-red-600 m-1 mt-2 text-center text-white\">\n          {error && <p data-testid=\"error\">{error}</p>}\n        </div>\n      </div>\n    </DefaultLayout>\n  );\n}\n","import DefaultLayout from '../components/ui/layout/Default';\nimport { useState } from 'react';\nimport Button from '../components/ui/io/Button';\nimport { EditorOptions, Option, Properties } from '../components/ui/Editor';\n\ninterface Props {\n  handleChange: (editorOptions: EditorOptions) => void;\n  options: EditorOptions;\n}\n\nexport function Settings({ handleChange, options }: Props) {\n  const [prop, setProp] = useState<Properties>({ key: 'fontSize', value: options.properties[0].value });\n  const [ops, setOps] = useState<Option[]>(options.options);\n\n  const persistChanges = () => {\n    handleChange({\n      options: ops,\n      properties: [prop]\n    });\n  };\n\n  const onSaveOs = (option: Option) => {\n    setOps(\n      ops.map((op: Option) => {\n        if (op.title === option.title) {\n          op.active = !option.active;\n        }\n        return op;\n      })\n    );\n  };\n\n  return (\n    <DefaultLayout>\n      <h1 className=\"text-xl m-2\">Settings</h1>\n      <div>\n        {\n          ops.map((option: Option, index: number) =>\n            <div key={index} className=\"m-2\">\n              <label>\n                {option.title}\n                <input type=\"checkbox\" checked={option.active} onChange={() => onSaveOs(option)} />\n              </label>\n            </div>\n          )\n        }\n        <input data-testid=\"font-size\" type=\"text\" value={prop.value} onChange={(event) => setProp({ key: 'fontSize', value: event.target.value })}/>\n      </div>\n      <Button onClick={persistChanges}>Save</Button>\n    </DefaultLayout>\n  );\n}\n","import { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport Editors from './pages/Editors';\nimport { Settings } from './pages/Settings';\nimport { createContext, useState } from 'react';\nimport { EditorOptions, Option, Properties } from './components/ui/Editor';\n\nconst defaultOp: Option[] = [\n  { title: 'foldGutter', active: true },\n  { title: 'syntaxHighlighting', active : true },\n  { title: 'history', active: false },\n  { title: 'highlightActiveLine', active: true },\n  { title: 'autocompletion', active: false } ,\n  { title: 'closeBrackets', active: false },\n];\n\nconst properties: Properties = {\n  key: 'fontSize',\n  value: '12px'\n};\n\nconst editorOptions: EditorOptions = {\n  options: defaultOp,\n  properties: [properties]\n};\n\nexport const SettingsContext = createContext(editorOptions);\n\nfunction App() {\n  const [savedState, setSavedState] = useState<string>('');\n\n  const handleChange = (changed: EditorOptions) => {\n    editorOptions.properties = changed.properties;\n    editorOptions.options = changed.options;\n  };\n\n  const saveState = (json: string) => {\n    setSavedState(json);\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Editors onPersist={saveState} currentJson={savedState} />} />\n        <Route path=\"/settings\" element={\n          <SettingsContext.Provider value={editorOptions.options as never}>\n            <Settings options={editorOptions} handleChange={handleChange} />\n          </SettingsContext.Provider>\n        } />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}