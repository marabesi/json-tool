{"version":3,"sources":["components/ui/editor/JsonEditor.tsx","core/cleanUp.ts","components/ui/io/InputText.tsx","components/ui/io/Button.tsx","components/ui/menu/ResultMenu.tsx","components/ui/menu/JsonMenu.tsx","components/ui/editor/EditorContainer.tsx","core/worker.js","pages/Editors.tsx","pages/Settings.tsx","components/ui/Header.tsx","components/ui/Footer.tsx","components/ui/layout/Default.tsx","components/ui/editor/default-options.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["JsonEditor","input","onChange","className","rest","theme","useContext","ThemeContext","settings","SettingsContext","basicSetup","options","forEach","item","title","active","style","backgroundColor","fullConfig","gray","overflowY","fontFamily","properties","key","value","defaultValue","join","height","extensions","json","darkMode","duotoneLight","CleanUp","IS_INSIDE_JSON_VALUE","ENDED_JSON_PAIR_KEY_VALUE","STARTED_INSIDE_JSON_KEY","DOUBLE_QUOTES","originalJson","this","cleanUpJsonFrom","withoutSpaces","cleanWhiteSpaces","cleanNewLines","stringToClean","cleanString","stack","i","length","current","push","inputText","classes","trim","type","eventValue","target","Button","children","onClick","disabled","undefined","ResultMenu","spacing","updateSpacing","writeToClipboard","cleanNewLinesAndSpaces","onSearch","JsonMenu","pasteFromClipboard","cleanup","onLoadedFile","accept","event","files","fileAt","reader","FileReader","readAsText","onload","evt","result","EditorContainer","width","onmessage","e","data","jsonAsString","fmt2json","expand","escape","indent","parseInt","format","JSON","parse","postMessage","error","cleanUp","Editors","onPersist","currentJson","useState","setOriginalResult","setResult","setError","setSpacing","worker","useMemo","code","myWorker","toString","Worker","URL","createObjectURL","Blob","onJsonChange","useCallback","useEffect","navigator","clipboard","read","clipboardItems","clipboardItem","types","getType","blob","text","writeText","search","dataTestId","editor","document","querySelector","focus","dispatchEvent","KeyboardEvent","ctrlKey","write","contenteditable","newSpacing","withoutNewLines","withoutSpacesAndNewLines","cleanWhiteSpacesAndNewLines","Settings","handleChange","prop","setProp","ops","setOps","map","option","index","checked","op","onSaveOs","Header","onDarkModeChanged","darkModeEnabled","props","to","href","rel","onColor","blue","offColor","checkedIcon","uncheckedIcon","Footer","DefaultLayout","onDarkThemeChanged","editorOptions","createContext","App","savedState","setSavedState","setDarkMode","isDarkThemeEnabled","window","matchMedia","matches","Provider","path","element","changed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fe78aaa6.chunk.js","sourcesContent":["import CodeMirror, { BasicSetupOptions } from '@uiw/react-codemirror';\nimport fullConfig from '../../../tailwindResolver';\nimport { json } from '@codemirror/lang-json';\nimport { SettingsContext, ThemeContext } from '../../../App';\nimport { CSSProperties, useContext } from 'react';\nimport { Option, Properties } from '../../../types/components/Editor';\nimport { duotoneLight } from '@uiw/codemirror-theme-duotone';\n\ntype Event = {\n  value: string;\n};\n\ntype EventChange = (event: Event) => void;\n\ninterface Props{\n  input: string;\n  className?: string;\n  onChange?: EventChange;\n  'data-testid': string;\n  contenteditable: boolean;\n}\n\nexport default function JsonEditor({ input, onChange, className, ...rest }: Props) {\n  const theme = useContext(ThemeContext);\n  const settings = useContext(SettingsContext);\n\n  const handleChange = (value: string) => {\n    if (onChange) {\n      onChange({ value });\n      return;\n    }\n  };\n\n  const basicSetup: BasicSetupOptions = {};\n  if (settings.options) {\n    settings.options.forEach((item: Option) => basicSetup[item.title as keyof BasicSetupOptions] = item.active);\n  }\n\n  const style: CSSProperties = {\n    backgroundColor: fullConfig.theme.backgroundColor.gray['200'],\n    overflowY: 'hidden',\n    fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\n  };\n\n  if (settings.properties) {\n    // @ts-ignore\n    settings.properties.forEach((item: Properties) => style[item.key] = item.value);\n  }\n\n  return (\n    <>\n      <textarea data-testid={`raw-${rest['data-testid']}`} className=\"hidden\" defaultValue={input}></textarea>\n      <CodeMirror\n        value={input}\n        onChange={handleChange}\n        className={[className, 'h-full'].join(' ')}\n        style={style}\n        height=\"100%\"\n        extensions={[json()]}\n        theme={theme.darkMode ? 'dark' : duotoneLight}\n        basicSetup={basicSetup}\n        {...rest}\n      />\n    </>\n  );\n}\n","export default class CleanUp {\n\n  private IS_INSIDE_JSON_VALUE: number = 3;\n  private ENDED_JSON_PAIR_KEY_VALUE: number = 4;\n  private STARTED_INSIDE_JSON_KEY: number = 1;\n  private DOUBLE_QUOTES: string = '\"';\n\n  cleanWhiteSpaces(originalJson: string): string {\n    return this.cleanUpJsonFrom(' ', originalJson);\n  }\n\n  cleanNewLines(originalJson: string): string {\n    return this.cleanUpJsonFrom('\\n', originalJson);\n  }\n\n  cleanWhiteSpacesAndNewLines(originalJson: string): string {\n    const withoutSpaces = this.cleanWhiteSpaces(originalJson);\n    return this.cleanNewLines(withoutSpaces);\n  }\n\n  private cleanUpJsonFrom(stringToClean: string, originalJson: string) {\n    let cleanString = '';\n    let stack = [];\n\n    for (let i = 0; i < originalJson.length; i++) {\n      const current = originalJson[i];\n\n      if (current === this.DOUBLE_QUOTES) {\n        stack.push(current);\n      }\n\n      if (stack.length === this.STARTED_INSIDE_JSON_KEY || stack.length === this.IS_INSIDE_JSON_VALUE) {\n        cleanString += originalJson[i];\n      } else {\n        if (current !== stringToClean) {\n          cleanString += originalJson[i];\n        }\n      }\n\n      if (stack.length === this.ENDED_JSON_PAIR_KEY_VALUE) {\n        stack = [];\n      }\n    }\n\n    return cleanString;\n  }\n}","type InputTextProps = {\n  onChange?: (value: string) => void;\n  value?: string\n  className?: string\n}\n\nexport default function inputText({ value, onChange, className, ...rest }: InputTextProps) {\n  const classes = [className, 'p-1 bg-blue-300 dark:bg-gray-500', ''].join(' ').trim();\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      className={classes}\n      onChange={eventValue => onChange ? onChange(eventValue.target.value) : null}\n      {...rest}\n    />\n  );\n}\n","import { DetailedHTMLProps, ReactNode } from 'react';\n\ntype ButtonProps = {\n  onClick?: DetailedHTMLProps<any, any>\n  children?: ReactNode\n  className?: string\n  title?: string\n  disabled?: boolean\n}\n\nexport default function Button({ children, className, onClick, disabled, ...rest }: ButtonProps) {\n  return(\n    <button\n      className={['bg-transparent border-0 cursor-pointer p-2 outline-none', disabled ? 'cursor-not-allowed': 'hover:bg-blue-800 dark:hover:bg-gray-800', className].join(' ')}\n      disabled={disabled}\n      onClick={onClick ? onClick : undefined}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n}\n","import InputText from '../io/InputText';\nimport Button from '../io/Button';\nimport { FaBackspace, FaRegCopy, FaSearch, FaTerminal, FaUserFriends } from 'react-icons/fa';\nimport { DetailedHTMLProps } from 'react';\n\ninterface Props {\n  spacing: DetailedHTMLProps<any, any>;\n  updateSpacing: DetailedHTMLProps<any, any>;\n  writeToClipboard: DetailedHTMLProps<any, any>;\n  cleanWhiteSpaces: DetailedHTMLProps<any, any>;\n  cleanNewLines: DetailedHTMLProps<any, any>;\n  cleanNewLinesAndSpaces: DetailedHTMLProps<any, any>;\n  onSearch: DetailedHTMLProps<any, any>;\n}\n\nexport default function ResultMenu(\n  { spacing, updateSpacing, writeToClipboard, cleanWhiteSpaces, cleanNewLines, cleanNewLinesAndSpaces, onSearch }: Props\n) {\n  return (\n    <div className=\"flex justify-start items-center m-2 ml-0 h-10\">\n      <Button data-testid=\"search-result\" onClick={onSearch}>\n        <FaSearch className=\"mr-2\" />\n      </Button>\n      <div className=\"flex items-center\">\n        <span className=\"mr-2\">Space tabulation</span>\n        <InputText\n          data-testid=\"space-size\"\n          className=\"w-10 rounded mr-2\"\n          value={spacing}\n          onChange={eventValue => updateSpacing(eventValue)}\n        />\n      </div>\n      <Button\n        onClick={cleanWhiteSpaces}\n        data-testid=\"clean-spaces\"\n        className=\"flex items-center\"\n      >\n        <FaBackspace className=\"mr-2\" />\n                Clean spaces\n      </Button>\n      <Button\n        onClick={cleanNewLines}\n        data-testid=\"clean-new-lines\"\n        className=\"flex items-center\"\n      >\n        <FaTerminal className=\"mr-2\" />\n                Clean new lines\n      </Button>\n      <Button\n        onClick={cleanNewLinesAndSpaces}\n        data-testid=\"clean-new-lines-and-spaces\"\n        className=\"flex items-center\"\n      >\n        <FaUserFriends className=\"mr-2\" />\n                Clean new lines and spaces\n      </Button>\n\n      <Button\n        data-testid=\"copy-json\"\n        onClick={writeToClipboard}\n        disabled={!writeToClipboard}\n        title=\"Copy json is disabled due lack of browser support\"\n        className=\"flex items-center\"\n      >\n        <FaRegCopy className=\"mr-2\" />\n                Copy json\n      </Button>\n    </div>\n  );\n}\n","import { BaseSyntheticEvent, DetailedHTMLProps } from 'react';\nimport Button from '../io/Button';\nimport { FaRegClipboard, FaRegFileArchive, FaRegTrashAlt, FaSearch } from 'react-icons/fa';\n\ninterface Props {\n  pasteFromClipboard: DetailedHTMLProps<any, any>;\n  cleanup: DetailedHTMLProps<any, any>;\n  onLoadedFile: DetailedHTMLProps<any, any>;\n  onSearch: DetailedHTMLProps<any, any>;\n}\n\nexport default function JsonMenu({ pasteFromClipboard, cleanup, onLoadedFile, onSearch } : Props) {\n  function onFileUploaded(event: BaseSyntheticEvent) {\n    const [fileAt] = event.target.files as File[];\n    const reader = new FileReader();\n    reader.readAsText(fileAt, 'UTF-8');\n    reader.onload = (evt) => {\n      if (evt.target) {\n        onLoadedFile(evt.target.result);\n      }\n    };\n  }\n\n  return (\n    <div className=\"flex w-full justify-start items-center m-2 ml-0 h-10\">\n      <Button data-testid=\"search-json\" onClick={onSearch}>\n        <FaSearch className=\"mr-2\" />\n      </Button>\n      <Button\n        onClick={pasteFromClipboard}\n        data-testid=\"paste-from-clipboard\"\n        className=\"ml-0 flex items-center\"\n        disabled={!pasteFromClipboard}\n        title=\"Paste from clipboard is disabled due lack of browser support\"\n      >\n        <FaRegClipboard className=\"mr-2\" />\n        Paste from clipboard\n      </Button>\n      <Button className=\"ml-0 flex items-center\">\n        <FaRegFileArchive className=\"mr-2\" />\n        <input type=\"file\" accept=\"application/json\" onChange={onFileUploaded} data-testid=\"upload-json\" />\n      </Button>\n      <Button\n        onClick={cleanup}\n        data-testid=\"clean\"\n        className=\"flex items-center\"\n      >\n        <FaRegTrashAlt className=\"mr-2\" />\n        Delete all\n      </Button>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode\n}\n\nexport default function EditorContainer({ children }: Props) {\n  return (\n    <div className=\"flex flex-col h-full m-1\" style={{ width: '49vw' }}>\n      {children}\n    </div>\n  );\n}\n","/* istanbul ignore file */\nconst onmessage = async (e) => {\n  const value = e.data.jsonAsString;\n  const spacing = e.data.spacing;\n\n  if (value) {\n    // eslint-disable-next-line no-undef\n    const format = await fmt2json(value, {\n      expand: true,\n      escape: false,\n      indent: parseInt(spacing)\n    });\n\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      postMessage({ error: true, originalJson: value, result: format.result });\n      return;\n    }\n\n    postMessage({ error: false, originalJson: value, result: format.result });\n    return;\n  }\n  // empty json was given\n  postMessage({ error: false, originalJson: value, result: value });\n};\n\nexport default onmessage;\n","import { useEffect, useState, useMemo, useCallback } from 'react';\nimport JsonEditor from '../components/ui/editor/JsonEditor';\nimport CleanUp from '../core/cleanUp';\nimport ResultMenu from '../components/ui/menu/ResultMenu';\nimport JsonMenu from '../components/ui/menu/JsonMenu';\nimport EditorContainer from '../components/ui/editor/EditorContainer';\nimport { EditorsPageProps } from '../types/pages';\nimport myWorker from '../core/worker';\n\nconst cleanUp = new CleanUp();\nconst defaultSpacing = '2';\n\nexport default function Editors({ onPersist, currentJson }: EditorsPageProps) {\n  const [originalJson, setOriginalResult] = useState<string>(currentJson);\n  const [result, setResult] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [spacing, setSpacing] = useState<string>(defaultSpacing);\n\n  const worker = useMemo(() => {\n    const code = `\n      importScripts('https://unpkg.com/format-to-json@2.1.2/fmt2json.min.js');\n      \n      if('function' === typeof importScripts) {\n        addEventListener('message', ${myWorker.toString()})\n      }\n    `;\n    return new Worker(URL.createObjectURL(new Blob([code])));\n  }, []);\n\n  worker.onmessage = async (worker: any) => {\n    setError('');\n    if (worker.data.error) {\n      setError('invalid json');\n    }\n    setOriginalResult(worker.data.originalJson);\n    setResult(worker.data.result);\n  };\n\n  const onJsonChange = useCallback(() => {\n    worker.postMessage({ jsonAsString: originalJson, spacing });\n  }, [originalJson, spacing, worker]);\n\n  useEffect(() => {\n    if (!spacing) return;\n\n    onJsonChange();\n\n    return () => {\n      onPersist(originalJson);\n    };\n  }, [spacing, onPersist, originalJson, onJsonChange]);\n\n  const pasteFromClipboard = async () => {\n    const clipboardItems = await navigator.clipboard.read();\n    for (const clipboardItem of clipboardItems) {\n      for (const type of clipboardItem.types) {\n        const blob = await clipboardItem.getType(type);\n        const text = await blob.text();\n        setOriginalResult(text);\n      }\n    }\n  };\n\n  const cleanup = () => {\n    setOriginalResult('');\n  };\n\n  const writeToClipboard = async () => {\n    await navigator.clipboard.writeText(result);\n  };\n\n  const cleanWhiteSpaces = () => {\n    const withoutSpaces = cleanUp.cleanWhiteSpaces(originalJson);\n    setResult(withoutSpaces);\n  };\n\n  const cleanNewLines = () => {\n    const withoutNewLines = cleanUp.cleanNewLines(originalJson);\n    setResult(withoutNewLines);\n  };\n\n  const cleanNewLinesAndSpaces = () => {\n    const withoutSpacesAndNewLines = cleanUp.cleanWhiteSpacesAndNewLines(originalJson);\n    setResult(withoutSpacesAndNewLines);\n  };\n\n  const updateSpacing = (newSpacing: string) => setSpacing(newSpacing);\n\n  const search = (dataTestId: string) => {\n    const editor = document.querySelector(`[data-testid=${dataTestId}] .cm-content`) as HTMLElement;\n    if (editor) {\n      editor.focus();\n      editor.dispatchEvent(new KeyboardEvent('keydown', {\n        'key': 'f',\n        ctrlKey: true,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"p-1 mb-8 h-full\" style={{ height: '80vh' }}>\n      <div className=\"flex h-full justify-center\">\n        <EditorContainer>\n          <JsonMenu\n            pasteFromClipboard={navigator.clipboard && typeof navigator.clipboard.write === 'function' ? pasteFromClipboard : false}\n            cleanup={cleanup}\n            onLoadedFile={(text: string) => setOriginalResult(text)}\n            onSearch={() => search('json')}\n          />\n\n          <JsonEditor\n            input={originalJson}\n            onChange={eventValue => setOriginalResult(eventValue.value)}\n            data-testid=\"json\"\n            contenteditable={true}\n          />\n        </EditorContainer>\n        <EditorContainer>\n          <ResultMenu\n            spacing={spacing}\n            updateSpacing={updateSpacing}\n            writeToClipboard={navigator.clipboard && typeof navigator.clipboard.read === 'function' ? writeToClipboard : false}\n            cleanWhiteSpaces={cleanWhiteSpaces}\n            cleanNewLines={cleanNewLines}\n            cleanNewLinesAndSpaces={cleanNewLinesAndSpaces}\n            onSearch={() => search('result')}\n          />\n\n          <JsonEditor\n            input={result}\n            className=\"result\"\n            data-testid=\"result\"\n            contenteditable={true}\n          />\n        </EditorContainer>\n      </div>\n      <div className=\"bg-red-600 m-1 mt-2 text-center text-white\">\n        {error && <p data-testid=\"error\">{error}</p>}\n      </div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport Button from '../components/ui/io/Button';\nimport { Option, Properties } from '../types/components/Editor';\nimport { SettingsPageProps } from '../types/pages';\n\nexport function Settings({ handleChange, options }: SettingsPageProps) {\n  const [prop, setProp] = useState<Properties>({ key: 'fontSize', value: options.properties[0].value });\n  const [ops, setOps] = useState<Option[]>(options.options);\n\n  const persistChanges = () => {\n    handleChange({\n      options: ops,\n      properties: [prop],\n    });\n  };\n\n  const onSaveOs = (option: Option) => {\n    setOps(\n      ops.map((op: Option) => {\n        if (op.title === option.title) {\n          op.active = !option.active;\n        }\n        return op;\n      })\n    );\n  };\n\n  return (\n    <>\n      <h1 className=\"text-xl m-2\">Settings</h1>\n      <div>\n        {\n          ops.map((option: Option, index: number) =>\n            <div key={index} className=\"m-2\">\n              <label>\n                {option.title}\n                <input type=\"checkbox\" checked={option.active} onChange={() => onSaveOs(option)} />\n              </label>\n            </div>\n          )\n        }\n        <input data-testid=\"font-size\" type=\"text\" value={prop.value} onChange={(event) => setProp({ key: 'fontSize', value: event.target.value })}/>\n      </div>\n      <Button onClick={persistChanges}>Save</Button>\n    </>\n  );\n}\n","import { FaCoffee, FaRegSun } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport Switch from 'react-switch';\nimport fullConfig from '../../tailwindResolver';\n\ninterface Props {\n  onDarkModeChanged: any\n  darkModeEnabled: boolean\n}\n\nexport default function Header({ onDarkModeChanged, darkModeEnabled, ...props }: Props) {\n  return (\n    <div className=\"bg-blue-900 flex justify-between p-5 dark:bg-gray-700\" {...props}>\n      <div className=\"flex\">\n        <h2 className=\"text-yellow-400 font-bold\">\n          <Link to=\"/\" data-testid=\"to-home\">JSON tool</Link>\n        </h2> |\n        <a href=\"https://github.com/marabesi/json-tool\" target=\"_blank\" rel=\"noreferrer\">by marabesi</a>\n      </div>\n      <div className=\"flex items-center\">\n        <Switch\n          onChange={onDarkModeChanged}\n          checked={darkModeEnabled}\n          data-testid=\"dark-mode\"\n          className=\"mr-5\"\n          height={18}\n          width={50}\n          onColor={fullConfig.theme.backgroundColor.blue['900']}\n          offColor={fullConfig.theme.backgroundColor.gray['700']}\n          checkedIcon={false}\n          uncheckedIcon={false}\n        />\n        <Link className=\"flex items-center mr-5\" data-testid=\"settings\" to=\"/settings\">\n          <FaRegSun />\n        </Link>\n        <a className=\"flex items-center\" data-testid=\"buy-me-a-coffee\" href=\"https://www.buymeacoffee.com/marabesi\" target=\"_blank\" rel=\"noreferrer\">\n          <FaCoffee className=\"mr-2\"/>\n          <span>Buy me a coffee</span>\n        </a>\n      </div>\n    </div>\n  );\n}\n","import { FaBug } from 'react-icons/fa';\n\nexport default function Footer({ ...props }) {\n  return (\n    <div className=\"flex justify-between bg-blue-300 p-5 dark:bg-gray-700\" { ...props }>\n      <a href=\"https://github.com/marabesi/json-tool/blob/main/LICENSE.md\" target=\"_blank\" rel=\"noreferrer\">\n        CC0 1.0 Universal\n      </a>\n      <a\n        data-testid=\"found-issue\"\n        href=\"https://github.com/marabesi/json-tool/issues\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"flex items-center\"\n      >\n        <FaBug className=\"mr-2\" /> Found an issue?\n      </a>\n    </div>\n  );\n}\n","import Header from '../Header';\nimport Footer from '../Footer';\nimport { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode\n  onDarkThemeChanged: any\n  darkModeEnabled: boolean\n}\n\nexport default function DefaultLayout({ children, onDarkThemeChanged, darkModeEnabled }: Props) {\n  return (\n    <div className={`flex flex-col ${darkModeEnabled ? 'dark': ''}`}>\n      <div className=\"bg-blue-400 h-screen text-gray-100 dark:text-gray-400 dark:bg-gray-600\">\n        <Header onDarkModeChanged={onDarkThemeChanged} darkModeEnabled={darkModeEnabled}/>\n        { children }\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import { EditorOptions, Option, Properties } from '../../../types/components/Editor';\n\nexport const defaultOp: Option[] = [\n  { title: 'foldGutter', active: true },\n  { title: 'syntaxHighlighting', active : true },\n  { title: 'history', active: false },\n  { title: 'highlightActiveLine', active: true },\n  { title: 'autocompletion', active: false } ,\n  { title: 'closeBrackets', active: false },\n];\n\nexport const properties: Properties = {\n  key: 'fontSize',\n  value: '12px'\n};\n\nexport const editorOptions: EditorOptions = {\n  options: defaultOp,\n  properties: [properties],\n};\n","import { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport Editors from './pages/Editors';\nimport { Settings } from './pages/Settings';\nimport { createContext, useEffect, useState } from 'react';\nimport DefaultLayout from './components/ui/layout/Default';\nimport { editorOptions } from './components/ui/editor/default-options';\nimport { EditorOptions } from './types/components/Editor';\n\nexport const SettingsContext = createContext(editorOptions);\n\nconst isDarkModeSet = () => {\n  return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n};\n\nconst theme = { darkMode: false };\nexport const ThemeContext = createContext(theme);\n\nfunction App() {\n  const [savedState, setSavedState] = useState<string>('');\n  const [darkModeEnabled, setDarkMode] = useState<boolean>(theme.darkMode);\n\n  const handleChange = (changed: EditorOptions) => {\n    editorOptions.properties = changed.properties;\n    editorOptions.options = changed.options;\n  };\n\n  const saveState = (json: string) => {\n    setSavedState(json);\n  };\n\n  const onDarkThemeChanged = (isDarkThemeEnabled: boolean)  => {\n    setDarkMode(isDarkThemeEnabled);\n    theme.darkMode = isDarkThemeEnabled;\n  };\n\n  useEffect(() => {\n    onDarkThemeChanged(isDarkModeSet());\n  }, []);\n\n  return (\n    <Router>\n      <ThemeContext.Provider value={theme as never}>\n        <DefaultLayout onDarkThemeChanged={onDarkThemeChanged} darkModeEnabled={darkModeEnabled}>\n          <Routes>\n            <Route path=\"/\" element={<Editors onPersist={saveState} currentJson={savedState} />} />\n            <Route path=\"/settings\" element={\n              <SettingsContext.Provider value={editorOptions.options as never}>\n                <Settings options={editorOptions} handleChange={handleChange} />\n              </SettingsContext.Provider>\n            } />\n          </Routes>\n        </DefaultLayout>\n      </ThemeContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}