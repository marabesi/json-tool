{"version":3,"sources":["tailwindResolver.js","components/ui/editor/JsonEditor.tsx","core/cleanUp.ts","components/ui/io/InputText.tsx","components/ui/io/Button.tsx","components/ui/menu/ResultMenu.tsx","components/ui/menu/JsonMenu.tsx","components/ui/editor/EditorContainer.tsx","pages/Editors.tsx","pages/Settings.tsx","components/ui/Header.tsx","components/ui/Footer.tsx","components/ui/layout/Default.tsx","components/ui/editor/default-options.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["JsonEditor","input","onChange","className","rest","theme","useContext","ThemeContext","settings","SettingsContext","basicSetup","options","forEach","item","title","active","style","backgroundColor","fullConfig","gray","overflowY","fontFamily","properties","key","value","defaultValue","join","height","extensions","json","darkMode","duotoneLight","CleanUp","IS_INSIDE_JSON_VALUE","ENDED_JSON_PAIR_KEY_VALUE","STARTED_INSIDE_JSON_KEY","DOUBLE_QUOTES","originalJson","this","cleanUpJsonFrom","withoutSpaces","cleanWhiteSpaces","cleanNewLines","stringToClean","cleanString","stack","i","length","current","push","inputText","classes","trim","type","eventValue","target","Button","children","onClick","disabled","undefined","ResultMenu","spacing","updateSpacing","writeToClipboard","cleanNewLinesAndSpaces","onSearch","JsonMenu","pasteFromClipboard","cleanup","onLoadedFile","accept","event","files","fileAt","reader","FileReader","readAsText","onload","evt","result","EditorContainer","width","cleanUp","Editors","onPersist","currentJson","useState","setOriginalResult","setResult","error","setError","setSpacing","AwesomeDebouncePromise","onJsonChange","useCallback","worker","Worker","URL","createObjectURL","Blob","postMessage","jsonAsString","onmessage","workerSelf","data","terminate","useEffect","navigator","clipboard","read","clipboardItems","clipboardItem","types","getType","blob","text","writeText","search","dataTestId","editor","document","querySelector","focus","dispatchEvent","KeyboardEvent","ctrlKey","write","contenteditable","newSpacing","withoutNewLines","withoutSpacesAndNewLines","cleanWhiteSpacesAndNewLines","Settings","handleChange","prop","setProp","ops","setOps","map","option","index","checked","op","onSaveOs","Header","onDarkModeChanged","darkModeEnabled","props","to","href","rel","onColor","blue","offColor","checkedIcon","uncheckedIcon","Footer","DefaultLayout","onDarkThemeChanged","editorOptions","createContext","App","savedState","setSavedState","setDarkMode","isDarkThemeEnabled","window","matchMedia","matches","Provider","path","element","changed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21b90e8d.chunk.js","sourcesContent":["// @preval\nconst resolveConfig = require('tailwindcss/resolveConfig');\nconst tailwindConfig = require('../tailwind.config');\nmodule.exports = resolveConfig(tailwindConfig);","import CodeMirror, { BasicSetupOptions } from '@uiw/react-codemirror';\nimport fullConfig from '../../../tailwindResolver';\nimport { json } from '@codemirror/lang-json';\nimport { SettingsContext, ThemeContext } from '../../../App';\nimport { CSSProperties, useContext } from 'react';\nimport { Option, Properties } from '../../../types/components/Editor';\nimport { duotoneLight } from '@uiw/codemirror-theme-duotone';\n\ntype Event = {\n  value: string;\n};\n\ntype EventChange = (event: Event) => void;\n\ninterface Props{\n  input: string;\n  className?: string;\n  onChange?: EventChange;\n  'data-testid': string;\n  contenteditable: boolean;\n}\n\nexport default function JsonEditor({ input, onChange, className, ...rest }: Props) {\n  const theme = useContext(ThemeContext);\n  const settings = useContext(SettingsContext);\n\n  const handleChange = (value: string) => {\n    if (onChange) {\n      onChange({ value });\n      return;\n    }\n  };\n\n  const basicSetup: BasicSetupOptions = {};\n  if (settings.options) {\n    // @ts-ignore\n    settings.options.forEach((item: Option) => basicSetup[item.title as keyof BasicSetupOptions] = item.active);\n  }\n\n  const style: CSSProperties = {\n    backgroundColor: fullConfig.theme.backgroundColor.gray['200'],\n    overflowY: 'hidden',\n    fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\n  };\n\n  if (settings.properties) {\n    // @ts-ignore\n    settings.properties.forEach((item: Properties) => style[item.key] = item.value);\n  }\n\n  return (\n    <>\n      <textarea data-testid={`raw-${rest['data-testid']}`} className=\"hidden\" defaultValue={input}></textarea>\n      <CodeMirror\n        value={input}\n        onChange={handleChange}\n        className={[className, 'h-full'].join(' ')}\n        style={style}\n        height=\"100%\"\n        extensions={[json()]}\n        theme={theme.darkMode ? 'dark' : duotoneLight}\n        basicSetup={basicSetup}\n        {...rest}\n      />\n    </>\n  );\n}\n","export default class CleanUp {\n\n  private IS_INSIDE_JSON_VALUE: number = 3;\n  private ENDED_JSON_PAIR_KEY_VALUE: number = 4;\n  private STARTED_INSIDE_JSON_KEY: number = 1;\n  private DOUBLE_QUOTES: string = '\"';\n\n  cleanWhiteSpaces(originalJson: string): string {\n    return this.cleanUpJsonFrom(' ', originalJson);\n  }\n\n  cleanNewLines(originalJson: string): string {\n    return this.cleanUpJsonFrom('\\n', originalJson);\n  }\n\n  cleanWhiteSpacesAndNewLines(originalJson: string): string {\n    const withoutSpaces = this.cleanWhiteSpaces(originalJson);\n    return this.cleanNewLines(withoutSpaces);\n  }\n\n  private cleanUpJsonFrom(stringToClean: string, originalJson: string) {\n    let cleanString = '';\n    let stack = [];\n\n    for (let i = 0; i < originalJson.length; i++) {\n      const current = originalJson[i];\n\n      if (current === this.DOUBLE_QUOTES) {\n        stack.push(current);\n      }\n\n      if (stack.length === this.STARTED_INSIDE_JSON_KEY || stack.length === this.IS_INSIDE_JSON_VALUE) {\n        cleanString += originalJson[i];\n      } else {\n        if (current !== stringToClean) {\n          cleanString += originalJson[i];\n        }\n      }\n\n      if (stack.length === this.ENDED_JSON_PAIR_KEY_VALUE) {\n        stack = [];\n      }\n    }\n\n    return cleanString;\n  }\n}","type InputTextProps = {\n  onChange?: (value: string) => void;\n  value?: string\n  className?: string\n}\n\nexport default function inputText({ value, onChange, className, ...rest }: InputTextProps) {\n  const classes = [className, 'p-1 bg-blue-300 dark:bg-gray-500', ''].join(' ').trim();\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      className={classes}\n      onChange={eventValue => onChange ? onChange(eventValue.target.value) : null}\n      {...rest}\n    />\n  );\n}\n","import { DetailedHTMLProps, ReactNode } from 'react';\n\ntype ButtonProps = {\n  onClick?: DetailedHTMLProps<any, any>\n  children?: ReactNode\n  className?: string\n  title?: string\n  disabled?: boolean\n}\n\nexport default function Button({ children, className, onClick, disabled, ...rest }: ButtonProps) {\n  return(\n    <button\n      className={['bg-transparent border-0 cursor-pointer p-2 outline-none', disabled ? 'cursor-not-allowed': 'hover:bg-blue-800 dark:hover:bg-gray-800', className].join(' ')}\n      disabled={disabled}\n      onClick={onClick ? onClick : undefined}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n}\n","import InputText from '../io/InputText';\nimport Button from '../io/Button';\nimport { FaBackspace, FaRegCopy, FaSearch, FaTerminal, FaUserFriends } from 'react-icons/fa';\nimport { DetailedHTMLProps } from 'react';\n\ninterface Props {\n  spacing: DetailedHTMLProps<any, any>;\n  updateSpacing: DetailedHTMLProps<any, any>;\n  writeToClipboard: DetailedHTMLProps<any, any>;\n  cleanWhiteSpaces: DetailedHTMLProps<any, any>;\n  cleanNewLines: DetailedHTMLProps<any, any>;\n  cleanNewLinesAndSpaces: DetailedHTMLProps<any, any>;\n  onSearch: DetailedHTMLProps<any, any>;\n}\n\nexport default function ResultMenu(\n  { spacing, updateSpacing, writeToClipboard, cleanWhiteSpaces, cleanNewLines, cleanNewLinesAndSpaces, onSearch }: Props\n) {\n  return (\n    <div className=\"flex justify-start items-center m-2 ml-0 h-10\">\n      <Button data-testid=\"search-result\" onClick={onSearch}>\n        <FaSearch className=\"mr-2\" />\n      </Button>\n      <div className=\"flex items-center\">\n        <span className=\"mr-2\">Space tabulation</span>\n        <InputText\n          data-testid=\"space-size\"\n          className=\"w-10 rounded mr-2\"\n          value={spacing}\n          onChange={eventValue => updateSpacing(eventValue)}\n        />\n      </div>\n      <Button\n        onClick={cleanWhiteSpaces}\n        data-testid=\"clean-spaces\"\n        className=\"flex items-center\"\n      >\n        <FaBackspace className=\"mr-2\" />\n                Clean spaces\n      </Button>\n      <Button\n        onClick={cleanNewLines}\n        data-testid=\"clean-new-lines\"\n        className=\"flex items-center\"\n      >\n        <FaTerminal className=\"mr-2\" />\n                Clean new lines\n      </Button>\n      <Button\n        onClick={cleanNewLinesAndSpaces}\n        data-testid=\"clean-new-lines-and-spaces\"\n        className=\"flex items-center\"\n      >\n        <FaUserFriends className=\"mr-2\" />\n                Clean new lines and spaces\n      </Button>\n\n      <Button\n        data-testid=\"copy-json\"\n        onClick={writeToClipboard}\n        disabled={!writeToClipboard}\n        title=\"Copy json is disabled due lack of browser support\"\n        className=\"flex items-center\"\n      >\n        <FaRegCopy className=\"mr-2\" />\n                Copy json\n      </Button>\n    </div>\n  );\n}\n","import { BaseSyntheticEvent, DetailedHTMLProps } from 'react';\nimport Button from '../io/Button';\nimport { FaRegClipboard, FaRegFileArchive, FaRegTrashAlt, FaSearch } from 'react-icons/fa';\n\ninterface Props {\n  pasteFromClipboard: DetailedHTMLProps<any, any>;\n  cleanup: DetailedHTMLProps<any, any>;\n  onLoadedFile: DetailedHTMLProps<any, any>;\n  onSearch: DetailedHTMLProps<any, any>;\n}\n\nexport default function JsonMenu({ pasteFromClipboard, cleanup, onLoadedFile, onSearch } : Props) {\n  function onFileUploaded(event: BaseSyntheticEvent) {\n    const [fileAt] = event.target.files as File[];\n    const reader = new FileReader();\n    reader.readAsText(fileAt, 'UTF-8');\n    reader.onload = (evt) => {\n      if (evt.target) {\n        onLoadedFile(evt.target.result);\n      }\n    };\n  }\n\n  return (\n    <div className=\"flex w-full justify-start items-center m-2 ml-0 h-10\">\n      <Button data-testid=\"search-json\" onClick={onSearch}>\n        <FaSearch className=\"mr-2\" />\n      </Button>\n      <Button\n        onClick={pasteFromClipboard}\n        data-testid=\"paste-from-clipboard\"\n        className=\"ml-0 flex items-center\"\n        disabled={!pasteFromClipboard}\n        title=\"Paste from clipboard is disabled due lack of browser support\"\n      >\n        <FaRegClipboard className=\"mr-2\" />\n        Paste from clipboard\n      </Button>\n      <Button className=\"ml-0 flex items-center\">\n        <FaRegFileArchive className=\"mr-2\" />\n        <input type=\"file\" accept=\"application/json\" onChange={onFileUploaded} data-testid=\"upload-json\" />\n      </Button>\n      <Button\n        onClick={cleanup}\n        data-testid=\"clean\"\n        className=\"flex items-center\"\n      >\n        <FaRegTrashAlt className=\"mr-2\" />\n        Delete all\n      </Button>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode\n}\n\nexport default function EditorContainer({ children }: Props) {\n  return (\n    <div className=\"flex flex-col h-full m-1\" style={{ width: '49vw' }}>\n      {children}\n    </div>\n  );\n}\n","import { useEffect, useState, useCallback } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport JsonEditor from '../components/ui/editor/JsonEditor';\nimport CleanUp from '../core/cleanUp';\nimport ResultMenu from '../components/ui/menu/ResultMenu';\nimport JsonMenu from '../components/ui/menu/JsonMenu';\nimport EditorContainer from '../components/ui/editor/EditorContainer';\nimport { EditorsPageProps } from '../types/pages';\n\nconst cleanUp = new CleanUp();\nconst defaultSpacing = '2';\n\nexport default function Editors({ onPersist, currentJson }: EditorsPageProps) {\n  const [originalJson, setOriginalResult] = useState<string>(currentJson);\n  const [result, setResult] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [spacing, setSpacing] = useState<string>(defaultSpacing);\n\n  const onChange = AwesomeDebouncePromise((eventValue: string) => setOriginalResult(eventValue),500);\n\n  const onJsonChange = useCallback(() => {\n    const code = `\n      importScripts('https://unpkg.com/format-to-json@2.1.2/fmt2json.min.js');\n\n      if('function' === typeof importScripts) {\n        addEventListener('message', async (event) => {\n           if (!event) {\n             return;\n           }\n         \n           const value = event.data.jsonAsString;\n           const spacing = event.data.spacing;\n         \n           if (value) {\n             // eslint-disable-next-line no-undef\n             const format = await fmt2json(value, {\n               expand: true,\n               escape: false,\n               indent: parseInt(spacing)\n             });\n         \n             try {\n               JSON.parse(value);\n             } catch (e) {\n               console.error('error from worker: ', e);\n               postMessage({ error: true, originalJson: value, result: format.result });\n               return;\n             }\n         \n             postMessage({ error: false, originalJson: value, result: format.result });\n             return;\n           }\n           // empty json was given\n           postMessage({ error: false, originalJson: value, result: value });\n         });\n      }\n    `;\n    const worker = new Worker(URL.createObjectURL(new Blob([code])));\n    worker.postMessage({ jsonAsString: originalJson, spacing });\n    worker.onmessage = async (workerSelf: any) => {\n      setError('');\n      if (workerSelf.data.error) {\n        setError('invalid json');\n      }\n      setOriginalResult(workerSelf.data.originalJson);\n      setResult(workerSelf.data.result);\n      worker.terminate();\n    };\n  }, [originalJson, spacing]);\n\n  useEffect(() => {\n    if (!spacing) return;\n\n    onJsonChange();\n\n    return () => {\n      onPersist(originalJson);\n    };\n  }, [spacing, onPersist, originalJson, onJsonChange]);\n\n  const pasteFromClipboard = async () => {\n    const clipboardItems = await navigator.clipboard.read();\n    for (const clipboardItem of clipboardItems) {\n      for (const type of clipboardItem.types) {\n        const blob = await clipboardItem.getType(type);\n        const text = await blob.text();\n        onChange(text);\n      }\n    }\n  };\n\n  const cleanup = () => onChange('');\n\n  const writeToClipboard = async () => {\n    await navigator.clipboard.writeText(result);\n  };\n\n  const cleanWhiteSpaces = () => {\n    const withoutSpaces = cleanUp.cleanWhiteSpaces(originalJson);\n    setResult(withoutSpaces);\n  };\n\n  const cleanNewLines = () => {\n    const withoutNewLines = cleanUp.cleanNewLines(originalJson);\n    setResult(withoutNewLines);\n  };\n\n  const cleanNewLinesAndSpaces = () => {\n    const withoutSpacesAndNewLines = cleanUp.cleanWhiteSpacesAndNewLines(originalJson);\n    setResult(withoutSpacesAndNewLines);\n  };\n\n  const updateSpacing = (newSpacing: string) => setSpacing(newSpacing);\n\n  const search = (dataTestId: string) => {\n    const editor = document.querySelector(`[data-testid=${dataTestId}] .cm-content`) as HTMLElement;\n    if (editor) {\n      editor.focus();\n      editor.dispatchEvent(new KeyboardEvent('keydown', {\n        'key': 'f',\n        ctrlKey: true,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"p-1 mb-8 h-full\" style={{ height: '80vh' }}>\n      <div className=\"flex h-full justify-center\">\n        <EditorContainer>\n          <JsonMenu\n            pasteFromClipboard={navigator.clipboard && typeof navigator.clipboard.write === 'function' ? pasteFromClipboard : false}\n            cleanup={cleanup}\n            onLoadedFile={(text: string) => setOriginalResult(text)}\n            onSearch={() => search('json')}\n          />\n\n          <JsonEditor\n            input={originalJson}\n            onChange={event => onChange(event.value)}\n            data-testid=\"json\"\n            contenteditable={true}\n          />\n        </EditorContainer>\n        <EditorContainer>\n          <ResultMenu\n            spacing={spacing}\n            updateSpacing={updateSpacing}\n            writeToClipboard={navigator.clipboard && typeof navigator.clipboard.read === 'function' ? writeToClipboard : false}\n            cleanWhiteSpaces={cleanWhiteSpaces}\n            cleanNewLines={cleanNewLines}\n            cleanNewLinesAndSpaces={cleanNewLinesAndSpaces}\n            onSearch={() => search('result')}\n          />\n\n          <JsonEditor\n            input={result}\n            className=\"result\"\n            data-testid=\"result\"\n            contenteditable={true}\n          />\n        </EditorContainer>\n      </div>\n      <div className=\"bg-red-600 m-1 mt-2 text-center text-white\">\n        {error && <p data-testid=\"error\">{error}</p>}\n      </div>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport Button from '../components/ui/io/Button';\nimport { Option, Properties } from '../types/components/Editor';\nimport { SettingsPageProps } from '../types/pages';\n\nexport function Settings({ handleChange, options }: SettingsPageProps) {\n  const [prop, setProp] = useState<Properties>({ key: 'fontSize', value: options.properties[0].value });\n  const [ops, setOps] = useState<Option[]>(options.options);\n\n  const persistChanges = () => {\n    handleChange({\n      options: ops,\n      properties: [prop],\n    });\n  };\n\n  const onSaveOs = (option: Option) => {\n    setOps(\n      ops.map((op: Option) => {\n        if (op.title === option.title) {\n          op.active = !option.active;\n        }\n        return op;\n      })\n    );\n  };\n\n  return (\n    <>\n      <h1 className=\"text-xl m-2\">Settings</h1>\n      <div>\n        {\n          ops.map((option: Option, index: number) =>\n            <div key={index} className=\"m-2\">\n              <label>\n                {option.title}\n                <input type=\"checkbox\" checked={option.active} onChange={() => onSaveOs(option)} />\n              </label>\n            </div>\n          )\n        }\n        <input data-testid=\"font-size\" type=\"text\" value={prop.value} onChange={(event) => setProp({ key: 'fontSize', value: event.target.value })}/>\n      </div>\n      <Button onClick={persistChanges}>Save</Button>\n    </>\n  );\n}\n","import { FaCoffee, FaRegSun } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport Switch from 'react-switch';\nimport fullConfig from '../../tailwindResolver';\n\ninterface Props {\n  onDarkModeChanged: any\n  darkModeEnabled: boolean\n}\n\nexport default function Header({ onDarkModeChanged, darkModeEnabled, ...props }: Props) {\n  return (\n    <div className=\"bg-blue-900 flex justify-between p-5 dark:bg-gray-700\" {...props}>\n      <div className=\"flex\">\n        <h2 className=\"text-yellow-400 font-bold\">\n          <Link to=\"/\" data-testid=\"to-home\">JSON tool</Link>\n        </h2> |\n        <a href=\"https://github.com/marabesi/json-tool\" target=\"_blank\" rel=\"noreferrer\">by marabesi</a>\n      </div>\n      <div className=\"flex items-center\">\n        <Switch\n          onChange={onDarkModeChanged}\n          checked={darkModeEnabled}\n          data-testid=\"dark-mode\"\n          className=\"mr-5\"\n          height={18}\n          width={50}\n          onColor={fullConfig.theme.backgroundColor.blue['900']}\n          offColor={fullConfig.theme.backgroundColor.gray['700']}\n          checkedIcon={false}\n          uncheckedIcon={false}\n        />\n        <Link className=\"flex items-center mr-5\" data-testid=\"settings\" to=\"/settings\">\n          <FaRegSun />\n        </Link>\n        <a className=\"flex items-center\" data-testid=\"buy-me-a-coffee\" href=\"https://www.buymeacoffee.com/marabesi\" target=\"_blank\" rel=\"noreferrer\">\n          <FaCoffee className=\"mr-2\"/>\n          <span>Buy me a coffee</span>\n        </a>\n      </div>\n    </div>\n  );\n}\n","import { FaBug } from 'react-icons/fa';\n\nexport default function Footer({ ...props }) {\n  return (\n    <div className=\"flex justify-between bg-blue-300 p-5 dark:bg-gray-700\" { ...props }>\n      <a href=\"https://github.com/marabesi/json-tool/blob/main/LICENSE.md\" target=\"_blank\" rel=\"noreferrer\">\n        CC0 1.0 Universal\n      </a>\n      <a\n        data-testid=\"found-issue\"\n        href=\"https://github.com/marabesi/json-tool/issues\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"flex items-center\"\n      >\n        <FaBug className=\"mr-2\" /> Found an issue?\n      </a>\n    </div>\n  );\n}\n","import Header from '../Header';\nimport Footer from '../Footer';\nimport { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode\n  onDarkThemeChanged: any\n  darkModeEnabled: boolean\n}\n\nexport default function DefaultLayout({ children, onDarkThemeChanged, darkModeEnabled }: Props) {\n  return (\n    <div className={`flex flex-col ${darkModeEnabled ? 'dark': ''}`}>\n      <div className=\"bg-blue-400 h-screen text-gray-100 dark:text-gray-400 dark:bg-gray-600\">\n        <Header onDarkModeChanged={onDarkThemeChanged} darkModeEnabled={darkModeEnabled}/>\n        { children }\n        <Footer />\n      </div>\n    </div>\n  );\n}\n","import { EditorOptions, Option, Properties } from '../../../types/components/Editor';\n\nexport const defaultOp: Option[] = [\n  { title: 'foldGutter', active: true },\n  { title: 'syntaxHighlighting', active : true },\n  { title: 'history', active: false },\n  { title: 'highlightActiveLine', active: true },\n  { title: 'autocompletion', active: false } ,\n  { title: 'closeBrackets', active: false },\n];\n\nexport const properties: Properties = {\n  key: 'fontSize',\n  value: '12px'\n};\n\nexport const editorOptions: EditorOptions = {\n  options: defaultOp,\n  properties: [properties],\n};\n","import { HashRouter as Router, Route, Routes } from 'react-router-dom';\nimport Editors from './pages/Editors';\nimport { Settings } from './pages/Settings';\nimport { createContext, useEffect, useState } from 'react';\nimport DefaultLayout from './components/ui/layout/Default';\nimport { editorOptions } from './components/ui/editor/default-options';\nimport { EditorOptions } from './types/components/Editor';\n\nexport const SettingsContext = createContext(editorOptions);\n\nconst isDarkModeSet = () => {\n  return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n};\n\nconst theme = { darkMode: false };\nexport const ThemeContext = createContext(theme);\n\nfunction App() {\n  const [savedState, setSavedState] = useState<string>('');\n  const [darkModeEnabled, setDarkMode] = useState<boolean>(theme.darkMode);\n\n  const handleChange = (changed: EditorOptions) => {\n    editorOptions.properties = changed.properties;\n    editorOptions.options = changed.options;\n  };\n\n  const saveState = (json: string) => {\n    setSavedState(json);\n  };\n\n  const onDarkThemeChanged = (isDarkThemeEnabled: boolean)  => {\n    setDarkMode(isDarkThemeEnabled);\n    theme.darkMode = isDarkThemeEnabled;\n  };\n\n  useEffect(() => {\n    onDarkThemeChanged(isDarkModeSet());\n  }, []);\n\n  return (\n    <Router>\n      <ThemeContext.Provider value={theme as never}>\n        <DefaultLayout onDarkThemeChanged={onDarkThemeChanged} darkModeEnabled={darkModeEnabled}>\n          <Routes>\n            <Route path=\"/\" element={<Editors onPersist={saveState} currentJson={savedState} />} />\n            <Route path=\"/settings\" element={\n              <SettingsContext.Provider value={editorOptions.options as never}>\n                <Settings options={editorOptions} handleChange={handleChange} />\n              </SettingsContext.Provider>\n            } />\n          </Routes>\n        </DefaultLayout>\n      </ThemeContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}